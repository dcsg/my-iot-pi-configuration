version: "3.7"
services:
  influxdb:
    image: influxdb:1.8.0
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=db0
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}
    restart: always

  telegraf:
    image: telegraf:1.14.2
    container_name: telegraf
    depends_on:
      - influxdb
    links:
      - influxdb
    env_file:
      - .env
    volumes:
      - /proc:/host/proc:ro
      - ./telegraf/telegraf.conf.template:/etc/telegraf/telegraf.conf.template:ro
      - ./telegraf/entrypoint.sh:/entrypoint.sh
      - ./bin/gomplate:/usr/local/bin/gomplate
    environment:
      - HOST_PROC=/host/proc
    restart: always

  grafana:
    image: grafana/grafana:6.7.3
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_ROOT_URL=http://grafana.${INTRA_DOMAIN}
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.routers.grafana.rule=Host(`grafana.${INTRA_DOMAIN}`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    dns:
      - 10.10.10.14

  unifi-controller:
    image: linuxserver/unifi-controller:arm32v7-5.12.66-ls56
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - MEM_LIMIT=512M
    volumes:
      - unifi-storage:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.unifi-controller.entrypoints=web,websecure
      - traefik.http.routers.unifi-controller.middlewares=redirect-web-to-websecure@internal
      - traefik.http.routers.unifi-controller.tls=true
      - traefik.http.routers.unifi-controller.rule=Host(`unifi-controller.${INTRA_DOMAIN}`)
      - traefik.http.services.unifi-controller.loadbalancer.server.port=8443
      - traefik.http.services.unifi-controller.loadbalancer.server.scheme=https
    dns:
      - 10.10.10.14
      - 127.0.0.1
      - 1.1.1.1

  adguard:
    image: adguard/adguardhome:armhf-v0.100.9
    container_name: adguard
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
    volumes:
      - ./adguard/work:/opt/adguardhome/work
      - ./adguard/conf:/opt/adguardhome/conf
      - ./adguard/etc/hosts:/etc/hosts
    restart: always
    cap_add:
      - NET_ADMIN
    dns:
      - 127.0.0.1
      - 1.1.1.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguard-http.entrypoints=web
      - traefik.http.routers.adguard-http.rule=Host(`adguard.${INTRA_DOMAIN}`)
      - traefik.http.services.adguard-http.loadbalancer.server.port=3000

  traefik:
    image: traefik:v2.2.0
    container_name: traefik
    env_file: .env
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8095:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`traefik.${INTRA_DOMAIN}`)
      - traefik.http.services.traefik.loadbalancer.server.port=8080

volumes:
  influxdb-storage:
    external: true
  chronograf-storage:
    external: true
  grafana-storage:
    external: true
  unifi-storage:
    external: true
